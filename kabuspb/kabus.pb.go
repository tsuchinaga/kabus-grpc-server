// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.14.0
// source: kabuspb/kabus.proto

package kabuspb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 市場
type Exchange int32

const (
	Exchange_UNSPECIFIED Exchange = 0 // 指定なし
	// 株式
	Exchange_TOUSHOU       Exchange = 1  // 東証
	Exchange_MEISHOU       Exchange = 3  // 名証
	Exchange_FUKUSHOU      Exchange = 5  // 福証
	Exchange_SATSUSHOU     Exchange = 6  // 札証
	Exchange_ALL_SESSION   Exchange = 2  // 日通し
	Exchange_DAY_SESSION   Exchange = 23 // 日中場
	Exchange_NIGHT_SESSION Exchange = 24 // 夕場
)

// Enum value maps for Exchange.
var (
	Exchange_name = map[int32]string{
		0:  "UNSPECIFIED",
		1:  "TOUSHOU",
		3:  "MEISHOU",
		5:  "FUKUSHOU",
		6:  "SATSUSHOU",
		2:  "ALL_SESSION",
		23: "DAY_SESSION",
		24: "NIGHT_SESSION",
	}
	Exchange_value = map[string]int32{
		"UNSPECIFIED":   0,
		"TOUSHOU":       1,
		"MEISHOU":       3,
		"FUKUSHOU":      5,
		"SATSUSHOU":     6,
		"ALL_SESSION":   2,
		"DAY_SESSION":   23,
		"NIGHT_SESSION": 24,
	}
)

func (x Exchange) Enum() *Exchange {
	p := new(Exchange)
	*p = x
	return p
}

func (x Exchange) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Exchange) Descriptor() protoreflect.EnumDescriptor {
	return file_kabuspb_kabus_proto_enumTypes[0].Descriptor()
}

func (Exchange) Type() protoreflect.EnumType {
	return &file_kabuspb_kabus_proto_enumTypes[0]
}

func (x Exchange) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Exchange.Descriptor instead.
func (Exchange) EnumDescriptor() ([]byte, []int) {
	return file_kabuspb_kabus_proto_rawDescGZIP(), []int{0}
}

// 登録銘柄一覧リクエスト
type GetRegisteredSymbolsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetRegisteredSymbolsRequest) Reset() {
	*x = GetRegisteredSymbolsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kabuspb_kabus_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRegisteredSymbolsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRegisteredSymbolsRequest) ProtoMessage() {}

func (x *GetRegisteredSymbolsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kabuspb_kabus_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRegisteredSymbolsRequest.ProtoReflect.Descriptor instead.
func (*GetRegisteredSymbolsRequest) Descriptor() ([]byte, []int) {
	return file_kabuspb_kabus_proto_rawDescGZIP(), []int{0}
}

// 銘柄登録リクエスト
type RegisterSymbolsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Symbols []*RegisterSymbol `protobuf:"bytes,1,rep,name=symbols,proto3" json:"symbols,omitempty"` // 登録する銘柄のリスト
}

func (x *RegisterSymbolsRequest) Reset() {
	*x = RegisterSymbolsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kabuspb_kabus_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterSymbolsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterSymbolsRequest) ProtoMessage() {}

func (x *RegisterSymbolsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kabuspb_kabus_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterSymbolsRequest.ProtoReflect.Descriptor instead.
func (*RegisterSymbolsRequest) Descriptor() ([]byte, []int) {
	return file_kabuspb_kabus_proto_rawDescGZIP(), []int{1}
}

func (x *RegisterSymbolsRequest) GetSymbols() []*RegisterSymbol {
	if x != nil {
		return x.Symbols
	}
	return nil
}

// 銘柄登録解除リクエスト
type UnregisterSymbolsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Symbols []*RegisterSymbol `protobuf:"bytes,1,rep,name=symbols,proto3" json:"symbols,omitempty"` // 登録解除する銘柄のリスト
}

func (x *UnregisterSymbolsRequest) Reset() {
	*x = UnregisterSymbolsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kabuspb_kabus_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnregisterSymbolsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnregisterSymbolsRequest) ProtoMessage() {}

func (x *UnregisterSymbolsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kabuspb_kabus_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnregisterSymbolsRequest.ProtoReflect.Descriptor instead.
func (*UnregisterSymbolsRequest) Descriptor() ([]byte, []int) {
	return file_kabuspb_kabus_proto_rawDescGZIP(), []int{2}
}

func (x *UnregisterSymbolsRequest) GetSymbols() []*RegisterSymbol {
	if x != nil {
		return x.Symbols
	}
	return nil
}

// 銘柄登録全解除リクエスト
type UnregisterAllSymbolsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UnregisterAllSymbolsRequest) Reset() {
	*x = UnregisterAllSymbolsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kabuspb_kabus_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnregisterAllSymbolsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnregisterAllSymbolsRequest) ProtoMessage() {}

func (x *UnregisterAllSymbolsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kabuspb_kabus_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnregisterAllSymbolsRequest.ProtoReflect.Descriptor instead.
func (*UnregisterAllSymbolsRequest) Descriptor() ([]byte, []int) {
	return file_kabuspb_kabus_proto_rawDescGZIP(), []int{3}
}

// 銘柄登録
type RegisteredSymbols struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Symbols []*RegisterSymbol `protobuf:"bytes,1,rep,name=symbols,proto3" json:"symbols,omitempty"` // 現在登録されている銘柄のリスト
}

func (x *RegisteredSymbols) Reset() {
	*x = RegisteredSymbols{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kabuspb_kabus_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisteredSymbols) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisteredSymbols) ProtoMessage() {}

func (x *RegisteredSymbols) ProtoReflect() protoreflect.Message {
	mi := &file_kabuspb_kabus_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisteredSymbols.ProtoReflect.Descriptor instead.
func (*RegisteredSymbols) Descriptor() ([]byte, []int) {
	return file_kabuspb_kabus_proto_rawDescGZIP(), []int{4}
}

func (x *RegisteredSymbols) GetSymbols() []*RegisterSymbol {
	if x != nil {
		return x.Symbols
	}
	return nil
}

// 銘柄登録の詳細
type RegisterSymbol struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Symbol   string   `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Exchange Exchange `protobuf:"varint,2,opt,name=exchange,proto3,enum=kabuspb.Exchange" json:"exchange,omitempty"`
}

func (x *RegisterSymbol) Reset() {
	*x = RegisterSymbol{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kabuspb_kabus_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterSymbol) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterSymbol) ProtoMessage() {}

func (x *RegisterSymbol) ProtoReflect() protoreflect.Message {
	mi := &file_kabuspb_kabus_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterSymbol.ProtoReflect.Descriptor instead.
func (*RegisterSymbol) Descriptor() ([]byte, []int) {
	return file_kabuspb_kabus_proto_rawDescGZIP(), []int{5}
}

func (x *RegisterSymbol) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *RegisterSymbol) GetExchange() Exchange {
	if x != nil {
		return x.Exchange
	}
	return Exchange_UNSPECIFIED
}

var File_kabuspb_kabus_proto protoreflect.FileDescriptor

var file_kabuspb_kabus_proto_rawDesc = []byte{
	0x0a, 0x13, 0x6b, 0x61, 0x62, 0x75, 0x73, 0x70, 0x62, 0x2f, 0x6b, 0x61, 0x62, 0x75, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x6b, 0x61, 0x62, 0x75, 0x73, 0x70, 0x62, 0x22, 0x1d,
	0x0a, 0x1b, 0x47, 0x65, 0x74, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x53,
	0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x4b, 0x0a,
	0x16, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x31, 0x0a, 0x07, 0x73, 0x79, 0x6d, 0x62, 0x6f,
	0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6b, 0x61, 0x62, 0x75, 0x73,
	0x70, 0x62, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x53, 0x79, 0x6d, 0x62, 0x6f,
	0x6c, 0x52, 0x07, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x73, 0x22, 0x4d, 0x0a, 0x18, 0x55, 0x6e,
	0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x31, 0x0a, 0x07, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6b, 0x61, 0x62, 0x75, 0x73, 0x70,
	0x62, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c,
	0x52, 0x07, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x73, 0x22, 0x1d, 0x0a, 0x1b, 0x55, 0x6e, 0x72,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x41, 0x6c, 0x6c, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x46, 0x0a, 0x11, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x73, 0x12, 0x31, 0x0a,
	0x07, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x6b, 0x61, 0x62, 0x75, 0x73, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65,
	0x72, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x52, 0x07, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x73,
	0x22, 0x57, 0x0a, 0x0e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x53, 0x79, 0x6d, 0x62,
	0x6f, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x2d, 0x0a, 0x08, 0x65, 0x78,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x6b,
	0x61, 0x62, 0x75, 0x73, 0x70, 0x62, 0x2e, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52,
	0x08, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2a, 0x87, 0x01, 0x0a, 0x08, 0x45, 0x78,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x0f, 0x0a, 0x0b, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43,
	0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x54, 0x4f, 0x55, 0x53, 0x48,
	0x4f, 0x55, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x4d, 0x45, 0x49, 0x53, 0x48, 0x4f, 0x55, 0x10,
	0x03, 0x12, 0x0c, 0x0a, 0x08, 0x46, 0x55, 0x4b, 0x55, 0x53, 0x48, 0x4f, 0x55, 0x10, 0x05, 0x12,
	0x0d, 0x0a, 0x09, 0x53, 0x41, 0x54, 0x53, 0x55, 0x53, 0x48, 0x4f, 0x55, 0x10, 0x06, 0x12, 0x0f,
	0x0a, 0x0b, 0x41, 0x4c, 0x4c, 0x5f, 0x53, 0x45, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x10, 0x02, 0x12,
	0x0f, 0x0a, 0x0b, 0x44, 0x41, 0x59, 0x5f, 0x53, 0x45, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x10, 0x17,
	0x12, 0x11, 0x0a, 0x0d, 0x4e, 0x49, 0x47, 0x48, 0x54, 0x5f, 0x53, 0x45, 0x53, 0x53, 0x49, 0x4f,
	0x4e, 0x10, 0x18, 0x32, 0xe6, 0x02, 0x0a, 0x0c, 0x4b, 0x61, 0x62, 0x75, 0x73, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x58, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x65, 0x72, 0x65, 0x64, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x73, 0x12, 0x24, 0x2e, 0x6b,
	0x61, 0x62, 0x75, 0x73, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x65, 0x72, 0x65, 0x64, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x6b, 0x61, 0x62, 0x75, 0x73, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x73, 0x12, 0x4e,
	0x0a, 0x0f, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c,
	0x73, 0x12, 0x1f, 0x2e, 0x6b, 0x61, 0x62, 0x75, 0x73, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x65, 0x72, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x6b, 0x61, 0x62, 0x75, 0x73, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x73, 0x12, 0x52,
	0x0a, 0x11, 0x55, 0x6e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x53, 0x79, 0x6d, 0x62,
	0x6f, 0x6c, 0x73, 0x12, 0x21, 0x2e, 0x6b, 0x61, 0x62, 0x75, 0x73, 0x70, 0x62, 0x2e, 0x55, 0x6e,
	0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x6b, 0x61, 0x62, 0x75, 0x73, 0x70, 0x62,
	0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x53, 0x79, 0x6d, 0x62, 0x6f,
	0x6c, 0x73, 0x12, 0x58, 0x0a, 0x14, 0x55, 0x6e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72,
	0x41, 0x6c, 0x6c, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x73, 0x12, 0x24, 0x2e, 0x6b, 0x61, 0x62,
	0x75, 0x73, 0x70, 0x62, 0x2e, 0x55, 0x6e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x41,
	0x6c, 0x6c, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1a, 0x2e, 0x6b, 0x61, 0x62, 0x75, 0x73, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x65, 0x72, 0x65, 0x64, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x73, 0x42, 0x0b, 0x5a, 0x09,
	0x2e, 0x3b, 0x6b, 0x61, 0x62, 0x75, 0x73, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_kabuspb_kabus_proto_rawDescOnce sync.Once
	file_kabuspb_kabus_proto_rawDescData = file_kabuspb_kabus_proto_rawDesc
)

func file_kabuspb_kabus_proto_rawDescGZIP() []byte {
	file_kabuspb_kabus_proto_rawDescOnce.Do(func() {
		file_kabuspb_kabus_proto_rawDescData = protoimpl.X.CompressGZIP(file_kabuspb_kabus_proto_rawDescData)
	})
	return file_kabuspb_kabus_proto_rawDescData
}

var file_kabuspb_kabus_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_kabuspb_kabus_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_kabuspb_kabus_proto_goTypes = []interface{}{
	(Exchange)(0),                       // 0: kabuspb.Exchange
	(*GetRegisteredSymbolsRequest)(nil), // 1: kabuspb.GetRegisteredSymbolsRequest
	(*RegisterSymbolsRequest)(nil),      // 2: kabuspb.RegisterSymbolsRequest
	(*UnregisterSymbolsRequest)(nil),    // 3: kabuspb.UnregisterSymbolsRequest
	(*UnregisterAllSymbolsRequest)(nil), // 4: kabuspb.UnregisterAllSymbolsRequest
	(*RegisteredSymbols)(nil),           // 5: kabuspb.RegisteredSymbols
	(*RegisterSymbol)(nil),              // 6: kabuspb.RegisterSymbol
}
var file_kabuspb_kabus_proto_depIdxs = []int32{
	6, // 0: kabuspb.RegisterSymbolsRequest.symbols:type_name -> kabuspb.RegisterSymbol
	6, // 1: kabuspb.UnregisterSymbolsRequest.symbols:type_name -> kabuspb.RegisterSymbol
	6, // 2: kabuspb.RegisteredSymbols.symbols:type_name -> kabuspb.RegisterSymbol
	0, // 3: kabuspb.RegisterSymbol.exchange:type_name -> kabuspb.Exchange
	1, // 4: kabuspb.KabusService.GetRegisteredSymbols:input_type -> kabuspb.GetRegisteredSymbolsRequest
	2, // 5: kabuspb.KabusService.RegisterSymbols:input_type -> kabuspb.RegisterSymbolsRequest
	3, // 6: kabuspb.KabusService.UnregisterSymbols:input_type -> kabuspb.UnregisterSymbolsRequest
	4, // 7: kabuspb.KabusService.UnregisterAllSymbols:input_type -> kabuspb.UnregisterAllSymbolsRequest
	5, // 8: kabuspb.KabusService.GetRegisteredSymbols:output_type -> kabuspb.RegisteredSymbols
	5, // 9: kabuspb.KabusService.RegisterSymbols:output_type -> kabuspb.RegisteredSymbols
	5, // 10: kabuspb.KabusService.UnregisterSymbols:output_type -> kabuspb.RegisteredSymbols
	5, // 11: kabuspb.KabusService.UnregisterAllSymbols:output_type -> kabuspb.RegisteredSymbols
	8, // [8:12] is the sub-list for method output_type
	4, // [4:8] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_kabuspb_kabus_proto_init() }
func file_kabuspb_kabus_proto_init() {
	if File_kabuspb_kabus_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_kabuspb_kabus_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRegisteredSymbolsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kabuspb_kabus_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterSymbolsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kabuspb_kabus_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnregisterSymbolsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kabuspb_kabus_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnregisterAllSymbolsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kabuspb_kabus_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisteredSymbols); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kabuspb_kabus_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterSymbol); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_kabuspb_kabus_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_kabuspb_kabus_proto_goTypes,
		DependencyIndexes: file_kabuspb_kabus_proto_depIdxs,
		EnumInfos:         file_kabuspb_kabus_proto_enumTypes,
		MessageInfos:      file_kabuspb_kabus_proto_msgTypes,
	}.Build()
	File_kabuspb_kabus_proto = out.File
	file_kabuspb_kabus_proto_rawDesc = nil
	file_kabuspb_kabus_proto_goTypes = nil
	file_kabuspb_kabus_proto_depIdxs = nil
}
