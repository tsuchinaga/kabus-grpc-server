syntax = "proto3";

package kabuspb;

option go_package = ".;kabuspb";

import "google/protobuf/timestamp.proto";

service KabusService {
  rpc GetToken(GetTokenRequest) returns (Token); // トークン取得
  rpc RefreshToken(RefreshTokenRequest) returns (Token); // トークン再取得
  rpc GetBoard(GetBoardRequest) returns (Board); // 時価情報・板情報
  rpc GetSymbol(GetSymbolRequest) returns (Symbol); // 銘柄情報
  rpc GetOrders(GetOrdersRequest) returns (Orders); // 注文約定照会
  rpc GetFutureSymbolCodeInfo(GetFutureSymbolCodeInfoRequest) returns (SymbolCodeInfo); // 先物銘柄コード取得
  rpc GetOptionSymbolCodeInfo(GetOptionSymbolCodeInfoRequest) returns (SymbolCodeInfo); // オプション銘柄コード取得
  rpc GetRegisteredSymbols(GetRegisteredSymbolsRequest) returns (RegisteredSymbols); // 登録銘柄一覧 ※直前で実行されたRegister, Unregister, UnregisterAllの結果を保持しているだけ
  rpc RegisterSymbols(RegisterSymbolsRequest) returns (RegisteredSymbols); // 銘柄登録
  rpc UnregisterSymbols(UnregisterSymbolsRequest) returns (RegisteredSymbols); // 銘柄登録解除
  rpc UnregisterAllSymbols(UnregisterAllSymbolsRequest) returns (RegisteredSymbols); // 銘柄登録全解除
}

// トークン取得リクエスト
message GetTokenRequest {}

// トークン再取得リクエスト
message RefreshTokenRequest {}

// 時価情報・板情報リクエスト
message GetBoardRequest {
  string symbol_code = 1;
  Exchange exchange = 2;
}

// 銘柄情報リクエスト
message GetSymbolRequest {
  string symbol_code = 1;
  Exchange exchange = 2;
}

// 注文約定照会リクエスト
message GetOrdersRequest {
  // 取得する商品
  Product product = 1;

  // 注文番号
  //   指定された注文番号と一致する注文のみレスポンスします。
  //   指定された注文番号との比較では大文字小文字を区別しません。
  //   複数の注文番号を指定することはできません。
  string id = 2;

  // 更新日時
  //   指定された更新日時以降（指定日時含む）に更新された注文のみレスポンスします。
  //   複数の更新日時を指定することはできません
  google.protobuf.Timestamp update_time = 3;

  // 注文詳細抑止
  bool get_details = 4;

  // 銘柄コード
  //   指定された銘柄コードと一致する注文のみレスポンスします。
  //   複数の銘柄コードを指定することができません。
  string symbol = 5;

  // 状態
  //   指定された状態と一致する注文のみレスポンスします。
  //   複数の状態を指定することはできません。
  OrderState state = 6;

  // 売買区分
  //   指定された売買区分と一致する注文のみレスポンスします。
  //   複数の売買区分を指定することができません。
  Side side = 7;

  // 取引区分
  //   指定された取引区分と一致する注文のみレスポンスします。
  //   複数の取引区分を指定することができません。
  TradeType tradeType = 8;
}

// 先物銘柄コード取得リクエスト
message GetFutureSymbolCodeInfoRequest{
  // 先物コード
  FutureCode future_code = 1;

  // 限月
  //   年月の値だけを使います
  //   ゼロ値なら直近の限月と同義
  google.protobuf.Timestamp derivative_month = 2;
}

// オプション銘柄コード取得リクエスト
message GetOptionSymbolCodeInfoRequest{
  // 限月
  //   年月の値だけを使います
  //   ゼロ値なら直近の限月と同義
  google.protobuf.Timestamp derivative_month = 1;

  // コール or プット
  CallPut call_or_put = 2;

  // 権利行使価格
  //   ゼロ値ならATMと同義
  int32 strike_price = 3;
}

// 登録銘柄一覧リクエスト
message GetRegisteredSymbolsRequest {}

// 銘柄登録リクエスト
message RegisterSymbolsRequest {
  // 登録する銘柄のリスト
  repeated RegisterSymbol symbols = 1;
}

// 銘柄登録解除リクエスト
message UnregisterSymbolsRequest {
  // 登録解除する銘柄のリスト
  repeated RegisterSymbol symbols = 1;
}

// 銘柄登録全解除リクエスト
message UnregisterAllSymbolsRequest {}

// トークン
message Token {
  // トークン
  string token = 1;

  // 有効期限
  google.protobuf.Timestamp expired_at = 2;
}

// 時価情報・板情報
message Board {
  // 銘柄コード
  string symbol_code = 1;

  // 銘柄名
  string symbol_name = 2;

  // 市場コード
  //   株式・先物・オプション銘柄の場合のみ
  Exchange exchange = 3;

  // 市場名称
  //   株式・先物・オプション銘柄の場合のみ
  string exchange_name = 4;

  // 現値
  double current_price = 5;

  // 現値時刻
  google.protobuf.Timestamp current_price_time = 6;

  // 現値前値比較
  string current_price_change_status = 7; // TODO enum化

  // 現値ステータス
  int32 current_price_status = 8; // TODO enum化

  // 計算用現値
  double calculation_price = 9;

  // 前日終値
  double previous_close = 10;

  // 前日終値日付
  google.protobuf.Timestamp previous_close_time = 11;

  // 前日比
  double change_previous_close = 12;

  // 騰落率
  double change_previous_close_per = 13;

  // 始値
  double opening_price = 14;

  // 始値時刻
  google.protobuf.Timestamp opening_price_time = 15;

  // 高値
  double high_price = 16;

  // 高値時刻
  google.protobuf.Timestamp high_price_time = 17;

  // 安値
  double low_price = 18;

  // 安値時刻
  google.protobuf.Timestamp low_price_time = 19;

  // 売買高
  //   株式・先物・オプション銘柄の場合のみ
  double trading_volume = 20;

  // 売買高時刻
  //   株式・先物・オプション銘柄の場合のみ
  google.protobuf.Timestamp trading_volume_time = 21;

  // 売買高加重平均価格（VWAP）
  //   株式・先物・オプション銘柄の場合のみ
  double vwap = 22;

  // 売買代金
  //   株式・先物・オプション銘柄の場合のみ
  double trading_value = 23;

  // 最良売気配数量
  //   株式・先物・オプション銘柄の場合のみ
  double bid_quantity = 24;

  // 最良売気配値段
  //   株式・先物・オプション銘柄の場合のみ
  double bid_price = 25;

  // 最良売気配時刻
  //  株式銘柄の場合のみ
  google.protobuf.Timestamp bid_time = 26;

  // 最良売気配フラグ
  //   株式・先物・オプション銘柄の場合のみ
  string bid_sign = 27; // TODO enum化

  // 売成行数量
  //   株式銘柄の場合のみ
  double market_order_sell_quantity = 28;

  // 売気配数量1本目
  FirstQuote sell1 = 29;

  // 売気配数量2本目
  Quote sell2 = 30;

  // 売気配数量3本目
  Quote sell3 = 31;

  // 売気配数量4本目
  Quote sell4 = 32;

  // 売気配数量5本目
  Quote sell5 = 33;

  // 売気配数量6本目
  Quote sell6 = 34;

  // 売気配数量7本目
  Quote sell7 = 35;

  // 売気配数量8本目
  Quote sell8 = 36;

  // 売気配数量9本目
  Quote sell9 = 37;

  // 売気配数量10本目
  Quote sell10 = 38;

  // 最良買気配数量
  //   株式・先物・オプション銘柄の場合のみ
  double ask_quantity = 39;

  // 最良買気配値段
  //   株式・先物・オプション銘柄の場合のみ
  double ask_price = 40;

  // 最良買気配時刻
  //  株式銘柄の場合のみ
  google.protobuf.Timestamp ask_time = 41;

  // 最良買気配フラグ
  //   株式・先物・オプション銘柄の場合のみ
  string ask_sign = 42; // TODO enum化

  // 買成行数量
  //   株式銘柄の場合のみ
  double market_order_buy_quantity = 43;

  // 買気配数量1本目
  FirstQuote buy1 = 44;

  // 買気配数量2本目
  Quote buy2 = 45;

  // 買気配数量3本目
  Quote buy3 = 46;

  // 買気配数量4本目
  Quote buy4 = 47;

  // 買気配数量5本目
  Quote buy5 = 48;

  // 買気配数量6本目
  Quote buy6 = 49;

  // 買気配数量7本目
  Quote buy7 = 50;

  // 買気配数量8本目
  Quote buy8 = 51;

  // 買気配数量9本目
  Quote buy9 = 52;

  // 買気配数量10本目
  Quote buy10 = 53;

  // OVER気配数量
  //   株式銘柄の場合のみ
  double over_sell_quantity = 54;

  // UNDER気配数量
  //   株式銘柄の場合のみ
  double under_buy_quantity = 55;

  // 時価総額
  //   株式銘柄の場合のみ
  double total_market_value = 56;

  // 清算値
  //   先物銘柄の場合のみ
  double clearing_price = 57;

  // インプライド・ボラティリティ
  //   オプション銘柄かつ日通しの場合のみ
  double implied_volatility = 58;

  // ガンマ
  //   オプション銘柄かつ日通しの場合のみ
  double gamma = 59;

  // セータ
  //   オプション銘柄かつ日通しの場合のみ
  double theta = 60;

  // ベガ
  //   オプション銘柄かつ日通しの場合のみ
  double vega = 61;

  // デルタ
  //   オプション銘柄かつ日通しの場合のみ
  double delta = 62;
}

// 銘柄
message Symbol {
  // 銘柄コード
  string code = 1;

  // 銘柄名
  string name = 2;

  // 銘柄略称
  //   ※株式・先物・オプション銘柄の場合のみ
  string display_name = 3;

  // 市場コード
  //   株式・先物・オプション銘柄の場合のみ
  Exchange exchange = 4;

  // 市場名称
  //   株式・先物・オプション銘柄の場合のみ
  string exchange_name = 5;

  // 業種コード名
  //   株式銘柄の場合のみ
  string industry_category = 6; // TODO enum

  // 時価総額
  //   株式銘柄の場合のみ
  double total_market_value = 7;

  // 発行済み株式数（千株）
  //   株式銘柄の場合のみ
  double total_stocks = 8;

  // 売買単位
  //   株式・先物・オプション銘柄の場合のみ
  double trading_unit = 9;

  // 決算期日
  //   株式銘柄の場合のみ
  google.protobuf.Timestamp fiscal_year_end_basic = 10;

  // 呼値グループ
  //   株式・先物・オプション銘柄の場合のみ
  string price_range_group = 11; // todo enum

  // 一般信用買建フラグ
  //   trueのとき一般信用買建可能
  //   株式銘柄の場合のみ
  bool kabucom_margin_buy = 12;

  // 一般信用売建フラグ
  //   trueのとき一般信用売建可能
  //   株式銘柄の場合のみ
  bool kabucom_margin_sell = 13;

  // 制度信用買建フラグ
  //   trueのとき制度信用買建可能
  //   株式銘柄の場合のみ
  bool margin_buy = 14;

  // 制度信用売建フラグ
  //   trueのとき制度信用売建可能
  //   株式銘柄の場合のみ
  bool margin_sell = 15;

  // 値幅上限
  //   株式・先物・オプション銘柄の場合のみ
  double upper_limit = 16;

  // 値幅下限
  //   株式・先物・オプション銘柄の場合のみ
  double lower_limit = 17;

  // 原資産コード
  //   先物・オプション銘柄の場合のみ
  string underlyer = 18; // todo enum

  // 限月-年月
  //   先物・オプション銘柄の場合のみ
  google.protobuf.Timestamp derivative_month = 19;

  // 取引開始日
  //   先物・オプション銘柄の場合のみ
  google.protobuf.Timestamp trade_start = 20;

  // 取引終了日
  //   先物・オプション銘柄の場合のみ
  google.protobuf.Timestamp trade_end = 21;

  // 権利行使価格
  //   オプション銘柄の場合のみ
  double strike_price = 22;

  // プット/コール区分
  //   オプション銘柄の場合のみ
  CallPut call_or_put = 23;

  // 清算値
  //   先物銘柄の場合のみ
  double clearing_price = 24;
}

// 銘柄コード情報
message SymbolCodeInfo {
  // 銘柄コード
  string code = 1;

  // 銘柄名
  string name = 2;
}

// 気配値 + 気配値フラグ
message FirstQuote {
  // 時刻
  //  株式銘柄の場合のみ
  google.protobuf.Timestamp time = 1;

  // 気配フラグ
  //   株式・先物・オプション銘柄の場合のみ
  string sign = 2; // TODO enum化

  // 値段
  //   株式・先物・オプション銘柄の場合のみ
  double price = 3;

  // 数量
  //   株式・先物・オプション銘柄の場合のみ
  double quantity = 4;
}

// 気配値
message Quote {
  // 値段
  //   株式・先物・オプション銘柄の場合のみ
  double price = 1;

  // 数量
  //   株式・先物・オプション銘柄の場合のみ
  double quantity = 2;
}

// 注文リスト
message Orders {
  repeated Order orders = 1;
}

// 注文
message Order {
  // ID
  string id = 1;

  // 状態
  State state = 2;

  // 注文状態
  OrderState order_state = 3;

  // 執行条件
  OrderType order_type = 4;

  // 受注日時
  google.protobuf.Timestamp receive_time = 5;

  // 銘柄コード
  string symbol_code = 6;

  // 銘柄名
  string symbol_name = 7;

  // 市場コード
  OrderExchange exchange = 8;

  // 市場名
  string exchange_name = 9;

  // 有効期間条件
  TimeInForce time_in_force = 10;

  // 値段
  double price = 11;

  // 発注数量
  double order_quantity = 12;

  // 約定数量
  double cumulative_quantity = 13;

  // 売買区分
  Side side = 14;

  // 取引区分
  TradeType trade_type = 15;

  // 口座種別
  AccountType account_type = 16;

  // 受渡区分
  DeliveryType delivery_type = 17;

  // 注文有効期限
  google.protobuf.Timestamp expire_day = 18;

  // 信用取引区分
  MarginTradeType margin_trade_type = 19;

  // 注文詳細
  repeated OrderDetail details = 20;
}

// 注文詳細
message OrderDetail {
  // シーケンスNo
  //   注文明細レコードの生成順序です。
  //   通番であるとは限りませんが、大小による順序は保たれています。
  int32 sequence_number = 1;

  // 注文詳細番号
  string id = 2;

  // 明細種別
  RecordType record_type = 3;

  // 取引所番号
  string exchange_id = 4;

  // 状態
  OrderDetailState state = 5;

  // 処理時刻
  google.protobuf.Timestamp transact_time = 6;

  // 執行条件
  OrderType order_type = 7;

  // 値段
  double price = 8;

  // 数量
  double quantity = 9;

  // 約定番号
  string execution_id = 10;

  // 約定日時
  google.protobuf.Timestamp execution_day = 11;

  // 受渡日
  google.protobuf.Timestamp delivery_day = 12;

  // 手数料
  //  注文詳細の明細種別が約定の場合に設定
  double commission = 13;

  // 手数料消費税
  //   明細種別は約定の場合にのみ表示されます。
  double commission_tax = 14;
}

// 銘柄登録
message RegisteredSymbols {
  // 現在登録されている銘柄のリスト
  repeated RegisterSymbol symbols = 1;
}

// 銘柄登録の詳細
message RegisterSymbol {
  // 銘柄コード
  string symbol = 1;

  // 市場
  Exchange exchange = 2;
}

// 市場
enum Exchange {
  EXCHANGE_UNSPECIFIED = 0; // 指定なし

  // 株式
  EXCHANGE_TOUSHOU = 1; // 東証
  EXCHANGE_MEISHOU = 3; // 名証
  EXCHANGE_FUKUSHOU = 5; // 福証
  EXCHANGE_SATSUSHOU = 6; // 札証

  // 先物・オプション
  EXCHANGE_ALL_SESSION = 2; // 日通し
  EXCHANGE_DAY_SESSION = 23; // 日中場
  EXCHANGE_NIGHT_SESSION = 24; // 夕場
}

// 先物コード
enum FutureCode {
  FUTURE_CODE_UNSPECIFIED = 0; // 指定なし
  FUTURE_CODE_NK225 = 1; // 日経平均先物
  FUTURE_CODE_NK225_MINI = 2; // 日経225mini先物
  FUTURE_CODE_TOPIX = 3; // TOPIX先物
  FUTURE_CODE_TOPIX_MINI = 4; // ミニTOPIX先物
  FUTURE_CODE_MOTHERS = 5; // 東証マザーズ先物
  FUTURE_CODE_JPX400 = 6; // JPX日経400先物
  FUTURE_CODE_DOW = 7; // NYダウ先物
  FUTURE_CODE_VI = 8; // 日経平均VI先物
  FUTURE_CODE_CORE30 = 9; // TOPIX Core30先物
  FUTURE_CODE_REIT = 10; // 東証REIT指数先物
}

// コール or プット
enum CallPut {
  CALL_PUT_UNSPECIFIED = 0; // 未指定
  CALL_PUT_CALL = 1; // CALL
  CALL_PUT_PUT = 2; // PUT
}

// 商品
enum Product {
  PRODUCT_UNSPECIFIED = 0; // 未指定
  PRODUCT_ALL = 1; // すべて
  PRODUCT_STOCK = 2; // 現物
  PRODUCT_MARGIN = 3; // 信用
  PRODUCT_FUTURE = 4; // 先物
  PRODUCT_OPTION = 5; // オプション
}

// 状態
enum State {
  STATE_UNSPECIFIED = 0; // 未指定
  STATE_WAIT = 1; // 待機（発注待機）
  STATE_PROCESSING = 2; // 処理中（発注送信中）
  STATE_PROCESSED = 3; // 処理済（発注済・訂正済）
  STATE_IN_MODIFY = 4; // 訂正取消送信中
  STATE_DONE = 5; // 終了（発注エラー・取消済・全約定・失効・期限切れ）
}

// 注文状態
enum OrderState {
  ORDER_STATE_UNSPECIFIED = 0; // 未指定
  ORDER_STATE_WAIT = 1; // 待機（発注待機）
  ORDER_STATE_PROCESSING = 2; // 処理中（発注送信中）
  ORDER_STATE_PROCESSED = 3; // 処理済（発注済・訂正済）
  ORDER_STATE_IN_MODIFY = 4; // 訂正取消送信中
  ORDER_STATE_DONE = 5; // 終了（発注エラー・取消済・全約定・失効・期限切れ）
}

// 売買区分
enum Side {
  SIDE_UNSPECIFIED = 0; // 未指定
  SIDE_BUY = 1; // 買い
  SIDE_SELL = 2; // 売り
}

// 取引区分
enum TradeType {
  TRADE_TYPE_UNSPECIFIED = 0; // 未指定
  TRADE_TYPE_ENTRY = 1; // 新規
  TRADE_TYPE_EXIT = 2; // 返済
}

// 執行条件
enum OrderType {
  ORDER_TYPE_UNSPECIFIED = 0; // 未指定
  ORDER_TYPE_ZARABA = 1; // ザラバ
  ORDER_TYPE_OPEN = 2; // 寄り
  ORDER_TYPE_CLOSE = 3; // 引け
  ORDER_TYPE_FUNARI = 4; // 不成
  ORDER_TYPE_MTLO = 5; // 対等指値(対当値段条件付注文 Market To Limit Order)
  ORDER_TYPE_IOC = 6; // IOC
}

// 注文の市場
enum OrderExchange {
  ORDER_EXCHANGE_UNSPECIFIED = 0; // 未指定
  ORDER_EXCHANGE_TOUSHOU = 1; // 東証
  ORDER_EXCHANGE_MEISHOU = 3; // 名証
  ORDER_EXCHANGE_FUKUSHOU = 5; // 福証
  ORDER_EXCHANGE_SATSUSHOU = 6; // 札証
  ORDER_EXCHANGE_SOR = 9; // SOR
  ORDER_EXCHANGE_ALL_SESSION = 2; // 日通し
  ORDER_EXCHANGE_DAY_SESSION = 23; // 日中場
  ORDER_EXCHANGE_NIGHT_SESSION = 24; // 夕場
}

// 口座種別
enum AccountType {
  ACCOUNT_TYPE_UNSPECIFIED = 0; // 未指定
  ACCOUNT_TYPE_GENERAL = 2; // 一般
  ACCOUNT_TYPE_SPECIFIC = 4; // 特定
  ACCOUNT_TYPE_CORPORATION = 12; // 法人
}

// 受渡区分
enum DeliveryType {
  DELIVERY_TYPE_UNSPECIFIED = 0; // 未指定
  DELIVERY_TYPE_AUTO = 1; // 自動振替
  DELIVERY_TYPE_CASH = 2; // お預かり金
}

// 信用取引区分
enum MarginTradeType {
  MARGIN_TRADE_TYPE_UNSPECIFIED = 0; // 未指定
  MARGIN_TRADE_TYPE_SYSTEM = 1; // 制度信用
  MARGIN_TRADE_TYPE_GENERAL_LONG = 2; // 一般信用
  MARGIN_TRADE_TYPE_GENERAL_SHORT = 3; // 一般信用(売短)
}

// 有効期間条件
enum TimeInForce {
  TIME_IN_FORCE_UNSPECIFIED = 0;
  TIME_IN_FORCE_FAS = 1; // FAS (Fill And Store)
  TIME_IN_FORCE_FAK = 2; // FAK (Fill And Kill)
  TIME_IN_FORCE_FOK = 3; // FOK (Fill Or Kill)
}

// 注文明細種別
enum RecordType {
  RECORD_TYPE_UNSPECIFIED = 0; // 指定なし
  RECORD_TYPE_RECEIVE = 1; // 受付
  RECORD_TYPE_CARRIED = 2; // 繰越
  RECORD_TYPE_EXPIRED = 3; // 期限切れ
  RECORD_TYPE_ORDERED = 4; // 発注
  RECORD_TYPE_MODIFIED = 5; // 訂正
  RECORD_TYPE_CANCELED = 6; // 取消
  RECORD_TYPE_REVOCATION = 7; // 失効
  RECORD_TYPE_CONTRACTED = 8; // 約定
}

// 注文状態ステータス
enum OrderDetailState {
  ORDER_DETAIL_STATE_UNSPECIFIED = 0; // 未指定
  ORDER_DETAIL_STATE_WAIT = 1; // 待機（発注待機）
  ORDER_DETAIL_STATE_PROCESSING = 2; // 処理中（発注送信中・訂正送信中・取消送信中）
  ORDER_DETAIL_STATE_PROCESSED = 3; // 処理済（発注済・訂正済・取消済・全約定・期限切れ）
  ORDER_DETAIL_STATE_ERROR = 4; // エラー
  ORDER_DETAIL_STATE_DELETED = 5; // 削除済み
}
